/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tienda;

import java.awt.Graphics;
import java.awt.Image;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Anita
 */
public class Eliminar_Producto extends javax.swing.JInternalFrame {

    FondoPanel fondo = new FondoPanel();
    DefaultTableModel modelo;
    JTextField id = new JTextField();
    int ide;

    /**
     * Creates new form Eliminar_Producto
     */
    public Eliminar_Producto() {
        this.setContentPane(fondo);
        initComponents();
        modelo = (DefaultTableModel) tb_productos.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tx_clave = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_productos = new javax.swing.JTable();
        elim_btn_buscar = new javax.swing.JButton();
        elim_btn_MosInv = new javax.swing.JButton();
        elim_btn_eliminar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Clave del producto:");

        tx_clave.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        tx_clave.setOpaque(false);
        tx_clave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tx_claveActionPerformed(evt);
            }
        });

        tb_productos.setAutoCreateRowSorter(true);
        tb_productos.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        tb_productos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tb_productos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Clave", "Nombre", "Cantidad", "Marca", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_productos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_productosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_productos);

        elim_btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/btn_buscar.jpg"))); // NOI18N
        elim_btn_buscar.setPreferredSize(new java.awt.Dimension(170, 58));
        elim_btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elim_btn_buscarActionPerformed(evt);
            }
        });

        elim_btn_MosInv.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/inventario.jpg"))); // NOI18N
        elim_btn_MosInv.setPreferredSize(new java.awt.Dimension(170, 58));
        elim_btn_MosInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elim_btn_MosInvActionPerformed(evt);
            }
        });

        elim_btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.jpg"))); // NOI18N
        elim_btn_eliminar.setPreferredSize(new java.awt.Dimension(170, 58));
        elim_btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                elim_btn_eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tx_clave, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(elim_btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(elim_btn_MosInv, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(elim_btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tx_clave, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(elim_btn_MosInv, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(elim_btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(elim_btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tx_claveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tx_claveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tx_claveActionPerformed

    private void tb_productosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_productosMouseClicked
        // TODO add your handling code here:
        int sel = tb_productos.rowAtPoint(evt.getPoint());
        id.setText(String.valueOf(tb_productos.getValueAt(sel, 0)));
        ide = Integer.parseInt(id.getText());
        Conectar();
    }//GEN-LAST:event_tb_productosMouseClicked

    private void elim_btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elim_btn_buscarActionPerformed
        if (!tx_clave.getText().isEmpty()) {
            limpiar();
            Buscar();
        }
    }//GEN-LAST:event_elim_btn_buscarActionPerformed

    private void elim_btn_MosInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elim_btn_MosInvActionPerformed
        // TODO add your handling code here:
        Inventario();
    }//GEN-LAST:event_elim_btn_MosInvActionPerformed

    private void elim_btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elim_btn_eliminarActionPerformed
        // TODO add your handling code here:
        Eliminar();
    }//GEN-LAST:event_elim_btn_eliminarActionPerformed
    public void Conectar() {
        Conexion db = new Conexion();
        db.conectar();
    }

    public void Buscar() {
        try {
            limpiar();
            Conexion db = new Conexion();
            db.conectar();
            //CReamos la coonsulta
            String query = "SELECT * FROM producto WHERE id_producto='" + tx_clave.getText() + "';";
            //Crear comando que ejecta la consulta la centencia y ejecutarla
            db.miSentencia = db.miConexion.createStatement();
            db.miResultado = db.miSentencia.executeQuery(query);
            //Imprimir cada uno de los registros de la tabla
            String linea = "";

            while (db.miResultado.next()) {
                if (db.miResultado.getString(1).equalsIgnoreCase(tx_clave.getText())) {

                    modelo.addRow(new Object[]{db.miResultado.getInt(1), db.miResultado.getString(2), db.miResultado.getInt(3),
                        db.miResultado.getString(4), db.miResultado.getFloat(5)});
                }
            }
            tb_productos.setModel(modelo);
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    public void Eliminar() {
        try {
            limpiar();
            Conexion db = new Conexion();
            db.conectar();
            //CReamos la coonsulta
            String query = "DELETE FROM producto WHERE id_producto=?";
            String queryDeta = "DELETE FROM detalle_venta WHERE id_producto=?";
            String queryDelete = "DELETE FROM existencias WHERE id_producto=?";
            //Crear comando que ejecta la consulta la centencia y ejecutarla
            PreparedStatement sentencia = db.miConexion.prepareStatement(query);
            sentencia.setInt(1, ide);
            sentencia.execute();
            sentencia.close();

            PreparedStatement sentenciaDelete = db.miConexion.prepareStatement(queryDelete);
            sentenciaDelete.setInt(1, ide);
            sentenciaDelete.execute();
            sentenciaDelete.close();
            
            PreparedStatement sentenciaDeta = db.miConexion.prepareStatement(queryDeta);
            sentenciaDeta.setInt(1, ide);
            sentenciaDeta.execute();
            sentenciaDeta.close();
            JOptionPane.showMessageDialog(this, "PRODUCTO ELIMINADO");
            Inventario();

        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    public void Inventario() {
        try {
            limpiar();
            Conexion db = new Conexion();
            db.conectar();
            //CReamos la coonsulta
            String query = "SELECT p.id_producto, p.nombre, e.exis_prod, p.marca, p.precio"
                    + " FROM producto p, existencias e "
                    + "WHERE p.id_producto = e.id_producto";
            //Crear comando que ejecta la consulta la centencia y ejecutarla
            db.miSentencia = db.miConexion.createStatement();
            db.miResultado = db.miSentencia.executeQuery(query);
            //Imprimir cada uno de los registros de la tabla
            String linea = "";
            while (db.miResultado.next()) {

                modelo.addRow(new Object[]{db.miResultado.getInt(1), db.miResultado.getString(2), db.miResultado.getInt(3),
                    db.miResultado.getString(4), db.miResultado.getFloat(5)});

            }
            tb_productos.setModel(modelo);
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }

    }

    private void limpiar() {
        for (int i = 0; i < tb_productos.getRowCount(); i++) {
            modelo.removeRow(i);
            i -= 1;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton elim_btn_MosInv;
    private javax.swing.JButton elim_btn_buscar;
    private javax.swing.JButton elim_btn_eliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_productos;
    private javax.swing.JTextField tx_clave;
    // End of variables declaration//GEN-END:variables
class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/Imagenes/fondo_ven.jpg")).getImage();

            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);

            setOpaque(false);

            super.paint(g);
        }
    }
}
